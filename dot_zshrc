# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
type direnv >/dev/null && emulate zsh -c "$(direnv export zsh)"
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi
type direnv >/dev/null && emulate zsh -c "$(direnv hook zsh)"

# go
export GOPATH=$HOME/.local/go
export PATH=$GOPATH/bin:$PATH

# poetry
export POETRY_HOME=$HOME/.local/poetry
export PATH=$POETRY_HOME/bin:$PATH

# rust
export CARGO_HOME=$HOME/.local/cargo
export PATH=$CARGO_HOME/bin:$PATH

# cuda
export CUDA_HOME=/usr/local/cuda
export CUDA_INCLUDE_PATH=$CUDA_HOME/include
export PATH=$CUDA_HOME/bin:$CUDA_INCLUDE_PATH:$PATH

# Pulumi 
export PATH=$HOME/.pulumi/bin:$PATH

# General
export PF_INFO="ascii title os de host kernel uptime pkgs shell memory wm palette"
export PATH="$HOME/.local/bin:$PATH"
export HISTFILE="$HOME/.zsh_history"
export HISTIGNORE="*sudo -S*"
export PROMPT_EOL_MARK=""   # don't add newline at the end of prompt
export SAVEHIST=100000
export EDITOR="nvim"

# Zsh options
setopt extendedhistory      # save timestamps in history
setopt histignoredups       # ignore consecutive dups in history
setopt histignorespace      # ignore spaces in history
setopt histfindnodups       # backwards search produces diff result each time
setopt histreduceblanks     # compact consecutive white space chars
setopt histnostore          # don't store history related functions
setopt incappendhistory     # incrementally add items to HISTFILE
setopt extendedglob         # use extended globbing (#, ~, ^)
setopt listpacked           # variable col widths
setopt histexpiredupsfirst  # delete duplicates first when HISTFILE size exceeds HISTSIZE
unsetopt beep               # don't beep 

# Load plugins
type zoxide >/dev/null && eval "$(zoxide init zsh)"
source ${ZDOTDIR:-~}/.config/antidote/antidote.zsh
bundlefile=~/.zsh_plugins
zstyle ":antidote:bundle" file $bundlefile
antidote load

# Load completions paths
autoload -Uz compinit; compinit
autoload -Uz promptinit; promptinit
autoload -Uz bashcompinit; bashcompinit
autoload -Uz bracketed-paste-magic
autoload -Uz url-quote-magic
zle -N bracketed-paste bracketed-paste-magic
zle -N self-insert url-quote-magic

# Prompt theme
prompt powerlevel10k

# Additional completions
type kubectl >/dev/null && source <(kubectl completion zsh)
type docker >/dev/null && source <(docker completion zsh)
type helm >/dev/null && source <(helm completion zsh)
type flux >/dev/null && source <(flux completion zsh)
type terraform >/dev/null && complete -o nospace -C /usr/bin/terraform terraform

# Custom Bindings
bindkey "^[[1;3D" backward-word
bindkey "^[[1;3C" forward-word
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down
bindkey "^I"   complete-word       
bindkey "^[f" autosuggest-accept

# Load aliases & functions
source ~/.zsh_aliases
source ~/.zsh_functions

# Wezterm fix
if [ -f /run/.toolboxenv -o -f /run/.containerenv ]; then
    export IS_CONTAINER=1
else
    export IS_CONTAINER=0
fi
if [ "$TERM" != "linux" -a "$TERM" != "dumb" ]; then
    printf "\033]1337;SetUserVar=%s=%s\007" is_toolbox `echo -n $IS_CONTAINER | base64`
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

